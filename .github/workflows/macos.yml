name: macOS CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew update
          brew install ninja tbb python@3.11 || brew upgrade ninja tbb python@3.11

      - name: Download Blender
        run: |
          set -eux
          url="https://download.blender.org/release/Blender4.5/blender-4.5.3-macos-arm64.dmg"
          alt_url="https://download.blender.org/release/Blender4.5/blender-4.5.3-macos-x64.dmg"
          archive="$RUNNER_TEMP/blender.dmg"
          curl -L "$url" -o "$archive" || curl -L "$alt_url" -o "$archive"
          hdiutil attach "$archive" -mountpoint /Volumes/Blender
          cp -R /Volumes/Blender/Blender.app "$RUNNER_TEMP/Blender.app"
          hdiutil detach /Volumes/Blender
          echo "BLENDER_DIR=$RUNNER_TEMP/Blender.app/Contents" >> "$GITHUB_ENV"
          echo "BLENDER_EXE=$RUNNER_TEMP/Blender.app/Contents/MacOS/Blender" >> "$GITHUB_ENV"
          echo "BLENDER_PYTHON=$RUNNER_TEMP/Blender.app/Contents/Resources/4.5/python" >> "$GITHUB_ENV"

      - name: Resolve Blender Python paths
        run: |
          set -eux
          PY_EXEC="$BLENDER_PYTHON/bin/python3.11"
          INCLUDE="$($PY_EXEC -c "import sysconfig; print(sysconfig.get_paths().get('platinclude'))")"
          if [ -z "$INCLUDE" ] || [ ! -d "$INCLUDE" ]; then
            INCLUDE="$($PY_EXEC -c "import sysconfig; print(sysconfig.get_paths().get('include'))")"
          fi
          if [ -z "$INCLUDE" ] || [ ! -f "$INCLUDE/patchlevel.h" ]; then
            INCLUDE="$(/opt/homebrew/bin/python3.11 -c "import sysconfig; print(sysconfig.get_paths().get('platinclude') or sysconfig.get_paths().get('include'))")"
          fi
          LIBFILE="$($PY_EXEC -c "import sysconfig, os; libdir=sysconfig.get_config_var('LIBDIR'); libname=sysconfig.get_config_var('LDLIBRARY'); print(os.path.join(libdir, libname))")"
          echo "BLENDER_PYTHON_INCLUDE=$INCLUDE" >> "$GITHUB_ENV"
          echo "BLENDER_PYTHON_LIB=$LIBFILE" >> "$GITHUB_ENV"
          echo "BLENDER_PYTHON_EXEC=$PY_EXEC" >> "$GITHUB_ENV"

      - name: Configure
        run: |
          set -eux
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release \
            -DPython3_EXECUTABLE="$BLENDER_PYTHON_EXEC" \
            -DPython3_INCLUDE_DIR="$BLENDER_PYTHON_INCLUDE" \
            -DPython3_LIBRARY="$BLENDER_PYTHON_LIB" \
            -DHINACLOTH_BLENDER_EXECUTABLE="$BLENDER_EXE"

      - name: Build xpbd_core
        run: |
          set -eux
          cmake --build build --target xpbd_core --parallel

      - name: Build test_xpbd
        run: |
          set -eux
          cmake --build build --target test_xpbd --parallel

      - name: Run tests
        run: |
          set -eux
          ctest --test-dir build --output-on-failure

      - name: Validate Blender example
        run: |
          set -eux
          "$BLENDER_EXE" --background --python example/demo1.py
